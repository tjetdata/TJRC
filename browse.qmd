---
title: "Browse Records"
editor: source
format: 
  html: 
    df-print: paged
---

Please select a mechanism to browse the data and use keywords and/or filters to narrow your search. Click on table rows to expand records.

``` {r}
#| include: false
library(tidyverse)
library(reactable)
library(htmltools)
library(tippy)
library(fontawesome)

ctry <- read_csv(here::here("_data", "country_list_tjet.csv")) %>% 
  select(countryid, country) 

with_tooltip <- function(value, tooltip, ...) {
  div(style = "text-decoration: underline; text-decoration-style: dotted; cursor: help",
      tippy(value, tooltip, ...))
}

filterFX <- function(element, label = "All") {
  function(values, name) {
    tags$select(
      # Set to undefined to clear the filter
      onchange = sprintf(
        paste(
          "Reactable.setFilter('", 
          element, 
          "', '%s', event.target.value || undefined)", 
          sep = ""),
        name
      ),
      # "All" has an empty value to clear the filter, and is the default option
      tags$option(value = "", "All countries"),
      lapply(sort(unique(values)), tags$option),
      "aria-label" = sprintf("Filter %s", name),
      style = "height: 100%; width: 99%"
    )
  }
}

reactableFX <- function(df, element, ...) {
  htmltools::browsable(
    tagList(
      df %>% 
        reactable(...,
                  elementId = element, 
                  searchable = TRUE, filterable = TRUE,
                  sortable = TRUE, showSortable = TRUE,
                  resizable = TRUE,
                  borderless = FALSE, striped = FALSE,
                  highlight = TRUE,
                  static = TRUE,
                  compact = FALSE, 
                  bordered = FALSE,
                  height = 500,
                  pagination = FALSE,
                  # showPageSizeOptions = TRUE, paginationType = "jump",
                  # pageSizeOptions = c(10, 25, 50, 100, 500, 1000),
                  # defaultPageSize = 25,
                  defaultColDef = colDef(minWidth = 100),
                  defaultExpanded = FALSE,
                  onClick = "expand",
                  language = reactableLang(
                    searchPlaceholder = "Search keyword...",
                    noData = "No entries found"
                  ),
                  theme = reactableTheme(
                    searchInputStyle = list(width = "100%")
                  )
        ),
      tags$button(
        "Expand or collapse additional information",
        onclick = paste("Reactable.toggleAllRowsExpanded('", element, "')", sep = "")
      )
    )
  )
}
```

::: {.panel-tabset group="mechanism"}

## Amnesties

:::: {.panel-tabset}

## Amnesties

``` {r}
#| echo: false
#| warning: false

df <- read_csv("_data/amnesties.csv", skip = 1) %>%
  left_join(ctry, by = c(countryID = "countryid"), keep = FALSE) %>% 
  select(amnestyID, country, amnestyYear, narrative) 


df %>% 
  reactableFX(element = "tab_amnesties", 
              defaultSorted = list(amnestyID = "asc"),
              columns = list(
                amnestyID = colDef(header = with_tooltip("ID", "Amnesty ID"), width = 60),
                narrative = colDef(show = FALSE, searchable = TRUE),
                country = colDef(name = "Country", 
                                 filterInput = filterFX(element = "tab_amnesties", label = "All countries")
                ), 
                amnestyYear = colDef(name = "Year", width = 120,
                                     filterInput = filterFX(element = "tab_amnesties", label = "All years")
                )
              ),
              details = function(index) paste("Narrative:", df[index, "narrative"])
  )
```

## Challenges 

``` {r}
#| echo: false
#| warning: false
read_csv("_data/challenges.csv", skip = 1) %>% 
  left_join(df %>% select(amnestyID, country), by = "amnestyID", keep = FALSE) %>% 
  reactableFX(element = "tab_challenges")
```

::::

## Customary Justice

``` {r}
#| echo: false
#| warning: false

read_csv("_data/customaryjustice.csv", skip = 1) %>% 
  left_join(ctry, by = c(countryID = "countryid"), keep = FALSE) %>% 
  reactableFX(element = "tab_customary")
```

## Reparation

``` {r}
#| echo: false
#| warning: false
read_csv("_data/reparations.csv", skip = 1) %>% 
  left_join(ctry, by = c(countryID = "countryid"), keep = FALSE) %>% 
  reactableFX(element = "tab_reparations")
```

## Trials

:::: {.panel-tabset group="trials"}

## International 

``` {r}
#| echo: false
#| warning: false
df <- read_csv("_data/trials.csv", skip = 1) %>% 
  left_join(ctry, by = c(countryID = "countryid"), keep = FALSE)

df %>% 
  filter(trialType == 3) %>% 
  reactableFX(element = "tab_intl")
```

## Foreign 

``` {r}
#| echo: false
#| warning: false
df %>% 
  filter(trialType == 2) %>%
  reactableFX(element = "tab_foreign")
```

## Domestic 

``` {r}
#| echo: false
#| warning: false
df %>% 
  filter(trialType == 1) %>% 
  reactableFX(element = "tab_domestic")
```

## Civil 

``` {r}
#| echo: false
#| warning: false
read_csv("_data/civiltrials.csv", skip = 1) %>% 
  left_join(ctry, by = c(countryViolationID = "countryid"), keep = FALSE) %>% 
  reactableFX(element = "tab_civiltrials") 
```

## The Accused 

``` {r}
#| echo: false
#| warning: false
read_csv("_data/accusations.csv", skip = 1) %>% 
  left_join(df %>% select(trialID, country), by = "trialID", keep = FALSE) %>%
  mutate(guiltySentence = ifelse(is.na(guiltySentence), pleaBargainSentence, guiltySentence) ) %>% 
  select(accusationID, trialID, nameOrDesc, charges, trialCourtType, outcomeYear, verdict, guiltySentence, membership, stateAgent, lowhighrank, trialReleventInfo) %>% 
  reactableFX(element = "tab_accusations", 
              columns = list(
                accusationID = colDef(header = with_tooltip("ID", "Accused ID"), width = 60),
                trialID = colDef(header = with_tooltip("Trial ID", "ID of this accused's trial")),
                nameOrDesc = colDef(name = "Name"),
                trialCourtType = colDef(header = with_tooltip("Type", "Trial Type")),
                outcomeYear = colDef(header = with_tooltip("Outcome Year", "Year of verdict")),
                charges = colDef(show = FALSE, searchable = TRUE),
                guiltySentence = colDef(show = FALSE, searchable = TRUE),
                trialReleventInfo = colDef(show = FALSE, searchable = TRUE)
              )
  )
```

::::

## Truth Commissions

``` {r}
#| echo: false
#| warning: false
read_csv("_data/tcs.csv", skip = 1) %>% 
  left_join(ctry, by = c(countryID = "countryid"), keep = FALSE) %>% 
  reactableFX(element = "tab_tcs")
```

## Vetting

``` {r}
#| echo: false
#| warning: false
read_csv("_data/vettings.csv", skip = 1) %>% 
  left_join(ctry, by = c(countryID = "countryid"), keep = FALSE) %>% 
  reactableFX(element = "tab_vettings")
```

:::

<!-- Click here to hide additional filtering options. -->

<!-- Hover over each filtering option to see more information. -->

<!-- Context: -->

<!-- Filter by Keywords: -->

<!-- War Context: -->

<!-- Crimes Covered: -->

<!-- Fits definition of TJ: -->

<!-- Year: -->

{{< include _footer.qmd >}}
